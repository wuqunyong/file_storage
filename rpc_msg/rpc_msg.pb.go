// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v4.25.3
// source: rpc_msg/rpc_msg.proto

package rpc_msg

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RPC_OPCODES int32

const (
	RPC_OPCODES_RPC_None               RPC_OPCODES = 0
	RPC_OPCODES_RPC_MysqlDescTable     RPC_OPCODES = 401
	RPC_OPCODES_RPC_MysqlQuery         RPC_OPCODES = 402
	RPC_OPCODES_RPC_MysqlInsert        RPC_OPCODES = 403
	RPC_OPCODES_RPC_MysqlUpdate        RPC_OPCODES = 404
	RPC_OPCODES_RPC_MysqlDelete        RPC_OPCODES = 405
	RPC_OPCODES_RPC_MysqlQueryByFilter RPC_OPCODES = 406
	RPC_OPCODES_RPC_MysqlMultiQuery    RPC_OPCODES = 407
	RPC_OPCODES_RPC_MysqlQueryAll      RPC_OPCODES = 408
	RPC_OPCODES_RPC_MysqlStatement     RPC_OPCODES = 409
)

// Enum value maps for RPC_OPCODES.
var (
	RPC_OPCODES_name = map[int32]string{
		0:   "RPC_None",
		401: "RPC_MysqlDescTable",
		402: "RPC_MysqlQuery",
		403: "RPC_MysqlInsert",
		404: "RPC_MysqlUpdate",
		405: "RPC_MysqlDelete",
		406: "RPC_MysqlQueryByFilter",
		407: "RPC_MysqlMultiQuery",
		408: "RPC_MysqlQueryAll",
		409: "RPC_MysqlStatement",
	}
	RPC_OPCODES_value = map[string]int32{
		"RPC_None":               0,
		"RPC_MysqlDescTable":     401,
		"RPC_MysqlQuery":         402,
		"RPC_MysqlInsert":        403,
		"RPC_MysqlUpdate":        404,
		"RPC_MysqlDelete":        405,
		"RPC_MysqlQueryByFilter": 406,
		"RPC_MysqlMultiQuery":    407,
		"RPC_MysqlQueryAll":      408,
		"RPC_MysqlStatement":     409,
	}
)

func (x RPC_OPCODES) Enum() *RPC_OPCODES {
	p := new(RPC_OPCODES)
	*p = x
	return p
}

func (x RPC_OPCODES) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RPC_OPCODES) Descriptor() protoreflect.EnumDescriptor {
	return file_rpc_msg_rpc_msg_proto_enumTypes[0].Descriptor()
}

func (RPC_OPCODES) Type() protoreflect.EnumType {
	return &file_rpc_msg_rpc_msg_proto_enumTypes[0]
}

func (x RPC_OPCODES) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RPC_OPCODES.Descriptor instead.
func (RPC_OPCODES) EnumDescriptor() ([]byte, []int) {
	return file_rpc_msg_rpc_msg_proto_rawDescGZIP(), []int{0}
}

type RPC_CODE int32

const (
	RPC_CODE_CODE_Ok                     RPC_CODE = 0
	RPC_CODE_CODE_Ok_Async               RPC_CODE = 1
	RPC_CODE_CODE_Timeout                RPC_CODE = 100
	RPC_CODE_CODE_Unregister             RPC_CODE = 101
	RPC_CODE_CODE_ParseError             RPC_CODE = 102
	RPC_CODE_CODE_ErrorServerPost        RPC_CODE = 103
	RPC_CODE_CODE_RouteNotLinkToServer   RPC_CODE = 104
	RPC_CODE_CODE_RouteSendToServerError RPC_CODE = 105
	RPC_CODE_CODE_OpcodeUnregister       RPC_CODE = 106
	RPC_CODE_CODE_CreateMsgError         RPC_CODE = 107
	RPC_CODE_CODE_LogicThreadNull        RPC_CODE = 108
	RPC_CODE_CODE_NotReceivedReply       RPC_CODE = 109
	RPC_CODE_CODE_NotSend                RPC_CODE = 110
	RPC_CODE_CODE_LoadFromDbError        RPC_CODE = 111
	RPC_CODE_CODE_DirtyFlagZero          RPC_CODE = 112
	RPC_CODE_CODE_QueryError             RPC_CODE = 113
	RPC_CODE_CODE_TableNameNotExistError RPC_CODE = 114
	RPC_CODE_CODE_GenerateQuerySQLError  RPC_CODE = 115
	RPC_CODE_CODE_NotMatchedResultError  RPC_CODE = 116
)

// Enum value maps for RPC_CODE.
var (
	RPC_CODE_name = map[int32]string{
		0:   "CODE_Ok",
		1:   "CODE_Ok_Async",
		100: "CODE_Timeout",
		101: "CODE_Unregister",
		102: "CODE_ParseError",
		103: "CODE_ErrorServerPost",
		104: "CODE_RouteNotLinkToServer",
		105: "CODE_RouteSendToServerError",
		106: "CODE_OpcodeUnregister",
		107: "CODE_CreateMsgError",
		108: "CODE_LogicThreadNull",
		109: "CODE_NotReceivedReply",
		110: "CODE_NotSend",
		111: "CODE_LoadFromDbError",
		112: "CODE_DirtyFlagZero",
		113: "CODE_QueryError",
		114: "CODE_TableNameNotExistError",
		115: "CODE_GenerateQuerySQLError",
		116: "CODE_NotMatchedResultError",
	}
	RPC_CODE_value = map[string]int32{
		"CODE_Ok":                     0,
		"CODE_Ok_Async":               1,
		"CODE_Timeout":                100,
		"CODE_Unregister":             101,
		"CODE_ParseError":             102,
		"CODE_ErrorServerPost":        103,
		"CODE_RouteNotLinkToServer":   104,
		"CODE_RouteSendToServerError": 105,
		"CODE_OpcodeUnregister":       106,
		"CODE_CreateMsgError":         107,
		"CODE_LogicThreadNull":        108,
		"CODE_NotReceivedReply":       109,
		"CODE_NotSend":                110,
		"CODE_LoadFromDbError":        111,
		"CODE_DirtyFlagZero":          112,
		"CODE_QueryError":             113,
		"CODE_TableNameNotExistError": 114,
		"CODE_GenerateQuerySQLError":  115,
		"CODE_NotMatchedResultError":  116,
	}
)

func (x RPC_CODE) Enum() *RPC_CODE {
	p := new(RPC_CODE)
	*p = x
	return p
}

func (x RPC_CODE) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RPC_CODE) Descriptor() protoreflect.EnumDescriptor {
	return file_rpc_msg_rpc_msg_proto_enumTypes[1].Descriptor()
}

func (RPC_CODE) Type() protoreflect.EnumType {
	return &file_rpc_msg_rpc_msg_proto_enumTypes[1]
}

func (x RPC_CODE) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RPC_CODE.Descriptor instead.
func (RPC_CODE) EnumDescriptor() ([]byte, []int) {
	return file_rpc_msg_rpc_msg_proto_rawDescGZIP(), []int{1}
}

type CHANNEL struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Realm   uint32 `protobuf:"varint,1,opt,name=realm,proto3" json:"realm,omitempty"`                   // address, 区服ID
	Type    uint32 `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`                     // address, 服务类型
	Id      uint32 `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`                         // address, 服务ID
	ActorId string `protobuf:"bytes,4,opt,name=actor_id,json=actorId,proto3" json:"actor_id,omitempty"` // actor id
}

func (x *CHANNEL) Reset() {
	*x = CHANNEL{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_msg_rpc_msg_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CHANNEL) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CHANNEL) ProtoMessage() {}

func (x *CHANNEL) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_msg_rpc_msg_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CHANNEL.ProtoReflect.Descriptor instead.
func (*CHANNEL) Descriptor() ([]byte, []int) {
	return file_rpc_msg_rpc_msg_proto_rawDescGZIP(), []int{0}
}

func (x *CHANNEL) GetRealm() uint32 {
	if x != nil {
		return x.Realm
	}
	return 0
}

func (x *CHANNEL) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *CHANNEL) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CHANNEL) GetActorId() string {
	if x != nil {
		return x.ActorId
	}
	return ""
}

type CONTROLLER struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SeqId        uint64 `protobuf:"varint,1,opt,name=seq_id,json=seqId,proto3" json:"seq_id,omitempty"`
	TimeoutMs    uint64 `protobuf:"varint,2,opt,name=timeout_ms,json=timeoutMs,proto3" json:"timeout_ms,omitempty"`
	ServerStream bool   `protobuf:"varint,3,opt,name=server_stream,json=serverStream,proto3" json:"server_stream,omitempty"`
}

func (x *CONTROLLER) Reset() {
	*x = CONTROLLER{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_msg_rpc_msg_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CONTROLLER) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CONTROLLER) ProtoMessage() {}

func (x *CONTROLLER) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_msg_rpc_msg_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CONTROLLER.ProtoReflect.Descriptor instead.
func (*CONTROLLER) Descriptor() ([]byte, []int) {
	return file_rpc_msg_rpc_msg_proto_rawDescGZIP(), []int{1}
}

func (x *CONTROLLER) GetSeqId() uint64 {
	if x != nil {
		return x.SeqId
	}
	return 0
}

func (x *CONTROLLER) GetTimeoutMs() uint64 {
	if x != nil {
		return x.TimeoutMs
	}
	return 0
}

func (x *CONTROLLER) GetServerStream() bool {
	if x != nil {
		return x.ServerStream
	}
	return false
}

type ClientMessageInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId      uint64 `protobuf:"varint,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	SeqNum         uint32 `protobuf:"varint,2,opt,name=seq_num,json=seqNum,proto3" json:"seq_num,omitempty"`
	Opcode         uint32 `protobuf:"varint,3,opt,name=opcode,proto3" json:"opcode,omitempty"`
	ResponseOpcode uint32 `protobuf:"varint,4,opt,name=response_opcode,json=responseOpcode,proto3" json:"response_opcode,omitempty"`
	ConnetionType  uint32 `protobuf:"varint,5,opt,name=connetion_type,json=connetionType,proto3" json:"connetion_type,omitempty"`
}

func (x *ClientMessageInfo) Reset() {
	*x = ClientMessageInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_msg_rpc_msg_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientMessageInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientMessageInfo) ProtoMessage() {}

func (x *ClientMessageInfo) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_msg_rpc_msg_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientMessageInfo.ProtoReflect.Descriptor instead.
func (*ClientMessageInfo) Descriptor() ([]byte, []int) {
	return file_rpc_msg_rpc_msg_proto_rawDescGZIP(), []int{2}
}

func (x *ClientMessageInfo) GetSessionId() uint64 {
	if x != nil {
		return x.SessionId
	}
	return 0
}

func (x *ClientMessageInfo) GetSeqNum() uint32 {
	if x != nil {
		return x.SeqNum
	}
	return 0
}

func (x *ClientMessageInfo) GetOpcode() uint32 {
	if x != nil {
		return x.Opcode
	}
	return 0
}

func (x *ClientMessageInfo) GetResponseOpcode() uint32 {
	if x != nil {
		return x.ResponseOpcode
	}
	return 0
}

func (x *ClientMessageInfo) GetConnetionType() uint32 {
	if x != nil {
		return x.ConnetionType
	}
	return 0
}

type RoleIdentifier struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId uint64             `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	GwId   *CHANNEL           `protobuf:"bytes,2,opt,name=gw_id,json=gwId,proto3" json:"gw_id,omitempty"`
	Info   *ClientMessageInfo `protobuf:"bytes,3,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *RoleIdentifier) Reset() {
	*x = RoleIdentifier{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_msg_rpc_msg_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleIdentifier) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleIdentifier) ProtoMessage() {}

func (x *RoleIdentifier) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_msg_rpc_msg_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleIdentifier.ProtoReflect.Descriptor instead.
func (*RoleIdentifier) Descriptor() ([]byte, []int) {
	return file_rpc_msg_rpc_msg_proto_rawDescGZIP(), []int{3}
}

func (x *RoleIdentifier) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *RoleIdentifier) GetGwId() *CHANNEL {
	if x != nil {
		return x.GwId
	}
	return nil
}

func (x *RoleIdentifier) GetInfo() *ClientMessageInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type CLIENT_IDENTIFIER struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Stub          *CHANNEL `protobuf:"bytes,1,opt,name=stub,proto3" json:"stub,omitempty"`
	SeqId         uint64   `protobuf:"varint,2,opt,name=seq_id,json=seqId,proto3" json:"seq_id,omitempty"`
	RequiredReply bool     `protobuf:"varint,3,opt,name=required_reply,json=requiredReply,proto3" json:"required_reply,omitempty"`
}

func (x *CLIENT_IDENTIFIER) Reset() {
	*x = CLIENT_IDENTIFIER{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_msg_rpc_msg_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CLIENT_IDENTIFIER) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CLIENT_IDENTIFIER) ProtoMessage() {}

func (x *CLIENT_IDENTIFIER) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_msg_rpc_msg_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CLIENT_IDENTIFIER.ProtoReflect.Descriptor instead.
func (*CLIENT_IDENTIFIER) Descriptor() ([]byte, []int) {
	return file_rpc_msg_rpc_msg_proto_rawDescGZIP(), []int{4}
}

func (x *CLIENT_IDENTIFIER) GetStub() *CHANNEL {
	if x != nil {
		return x.Stub
	}
	return nil
}

func (x *CLIENT_IDENTIFIER) GetSeqId() uint64 {
	if x != nil {
		return x.SeqId
	}
	return 0
}

func (x *CLIENT_IDENTIFIER) GetRequiredReply() bool {
	if x != nil {
		return x.RequiredReply
	}
	return false
}

type SERVER_IDENTIFIER struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Stub *CHANNEL `protobuf:"bytes,1,opt,name=stub,proto3" json:"stub,omitempty"`
}

func (x *SERVER_IDENTIFIER) Reset() {
	*x = SERVER_IDENTIFIER{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_msg_rpc_msg_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SERVER_IDENTIFIER) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SERVER_IDENTIFIER) ProtoMessage() {}

func (x *SERVER_IDENTIFIER) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_msg_rpc_msg_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SERVER_IDENTIFIER.ProtoReflect.Descriptor instead.
func (*SERVER_IDENTIFIER) Descriptor() ([]byte, []int) {
	return file_rpc_msg_rpc_msg_proto_rawDescGZIP(), []int{5}
}

func (x *SERVER_IDENTIFIER) GetStub() *CHANNEL {
	if x != nil {
		return x.Stub
	}
	return nil
}

type RPC_REQUEST struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Client       *CLIENT_IDENTIFIER `protobuf:"bytes,1,opt,name=client,proto3" json:"client,omitempty"`                                  // 调用方
	Server       *SERVER_IDENTIFIER `protobuf:"bytes,2,opt,name=server,proto3" json:"server,omitempty"`                                  // 被调用方
	ServerStream bool               `protobuf:"varint,3,opt,name=server_stream,json=serverStream,proto3" json:"server_stream,omitempty"` // 是否连续响应
	Opcodes      uint32             `protobuf:"varint,4,opt,name=opcodes,proto3" json:"opcodes,omitempty"`
	ArgsData     []byte             `protobuf:"bytes,5,opt,name=args_data,json=argsData,proto3" json:"args_data,omitempty"`
}

func (x *RPC_REQUEST) Reset() {
	*x = RPC_REQUEST{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_msg_rpc_msg_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RPC_REQUEST) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RPC_REQUEST) ProtoMessage() {}

func (x *RPC_REQUEST) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_msg_rpc_msg_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RPC_REQUEST.ProtoReflect.Descriptor instead.
func (*RPC_REQUEST) Descriptor() ([]byte, []int) {
	return file_rpc_msg_rpc_msg_proto_rawDescGZIP(), []int{6}
}

func (x *RPC_REQUEST) GetClient() *CLIENT_IDENTIFIER {
	if x != nil {
		return x.Client
	}
	return nil
}

func (x *RPC_REQUEST) GetServer() *SERVER_IDENTIFIER {
	if x != nil {
		return x.Server
	}
	return nil
}

func (x *RPC_REQUEST) GetServerStream() bool {
	if x != nil {
		return x.ServerStream
	}
	return false
}

func (x *RPC_REQUEST) GetOpcodes() uint32 {
	if x != nil {
		return x.Opcodes
	}
	return 0
}

func (x *RPC_REQUEST) GetArgsData() []byte {
	if x != nil {
		return x.ArgsData
	}
	return nil
}

type STATUS struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code uint32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *STATUS) Reset() {
	*x = STATUS{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_msg_rpc_msg_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *STATUS) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*STATUS) ProtoMessage() {}

func (x *STATUS) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_msg_rpc_msg_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use STATUS.ProtoReflect.Descriptor instead.
func (*STATUS) Descriptor() ([]byte, []int) {
	return file_rpc_msg_rpc_msg_proto_rawDescGZIP(), []int{7}
}

func (x *STATUS) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *STATUS) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type RPC_RESPONSE struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Client     *CLIENT_IDENTIFIER `protobuf:"bytes,1,opt,name=client,proto3" json:"client,omitempty"` // 调用方（与请求时一致）
	Server     *SERVER_IDENTIFIER `protobuf:"bytes,2,opt,name=server,proto3" json:"server,omitempty"` // 被调用方
	Status     *STATUS            `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	HasMore    bool               `protobuf:"varint,4,opt,name=has_more,json=hasMore,proto3" json:"has_more,omitempty"`
	Offset     uint32             `protobuf:"varint,5,opt,name=offset,proto3" json:"offset,omitempty"`
	ResultData []byte             `protobuf:"bytes,6,opt,name=result_data,json=resultData,proto3" json:"result_data,omitempty"`
}

func (x *RPC_RESPONSE) Reset() {
	*x = RPC_RESPONSE{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_msg_rpc_msg_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RPC_RESPONSE) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RPC_RESPONSE) ProtoMessage() {}

func (x *RPC_RESPONSE) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_msg_rpc_msg_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RPC_RESPONSE.ProtoReflect.Descriptor instead.
func (*RPC_RESPONSE) Descriptor() ([]byte, []int) {
	return file_rpc_msg_rpc_msg_proto_rawDescGZIP(), []int{8}
}

func (x *RPC_RESPONSE) GetClient() *CLIENT_IDENTIFIER {
	if x != nil {
		return x.Client
	}
	return nil
}

func (x *RPC_RESPONSE) GetServer() *SERVER_IDENTIFIER {
	if x != nil {
		return x.Server
	}
	return nil
}

func (x *RPC_RESPONSE) GetStatus() *STATUS {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *RPC_RESPONSE) GetHasMore() bool {
	if x != nil {
		return x.HasMore
	}
	return false
}

func (x *RPC_RESPONSE) GetOffset() uint32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *RPC_RESPONSE) GetResultData() []byte {
	if x != nil {
		return x.ResultData
	}
	return nil
}

type RPC_Multiplexer_Forward struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Role    *RoleIdentifier    `protobuf:"bytes,1,opt,name=role,proto3" json:"role,omitempty"`
	Info    *ClientMessageInfo `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`
	BodyMsg []byte             `protobuf:"bytes,3,opt,name=body_msg,json=bodyMsg,proto3" json:"body_msg,omitempty"`
}

func (x *RPC_Multiplexer_Forward) Reset() {
	*x = RPC_Multiplexer_Forward{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_msg_rpc_msg_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RPC_Multiplexer_Forward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RPC_Multiplexer_Forward) ProtoMessage() {}

func (x *RPC_Multiplexer_Forward) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_msg_rpc_msg_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RPC_Multiplexer_Forward.ProtoReflect.Descriptor instead.
func (*RPC_Multiplexer_Forward) Descriptor() ([]byte, []int) {
	return file_rpc_msg_rpc_msg_proto_rawDescGZIP(), []int{9}
}

func (x *RPC_Multiplexer_Forward) GetRole() *RoleIdentifier {
	if x != nil {
		return x.Role
	}
	return nil
}

func (x *RPC_Multiplexer_Forward) GetInfo() *ClientMessageInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *RPC_Multiplexer_Forward) GetBodyMsg() []byte {
	if x != nil {
		return x.BodyMsg
	}
	return nil
}

type PRC_DeMultiplexer_Forward struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Role    *RoleIdentifier    `protobuf:"bytes,1,opt,name=role,proto3" json:"role,omitempty"`
	Info    *ClientMessageInfo `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`
	BodyMsg []byte             `protobuf:"bytes,3,opt,name=body_msg,json=bodyMsg,proto3" json:"body_msg,omitempty"`
}

func (x *PRC_DeMultiplexer_Forward) Reset() {
	*x = PRC_DeMultiplexer_Forward{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_msg_rpc_msg_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PRC_DeMultiplexer_Forward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PRC_DeMultiplexer_Forward) ProtoMessage() {}

func (x *PRC_DeMultiplexer_Forward) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_msg_rpc_msg_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PRC_DeMultiplexer_Forward.ProtoReflect.Descriptor instead.
func (*PRC_DeMultiplexer_Forward) Descriptor() ([]byte, []int) {
	return file_rpc_msg_rpc_msg_proto_rawDescGZIP(), []int{10}
}

func (x *PRC_DeMultiplexer_Forward) GetRole() *RoleIdentifier {
	if x != nil {
		return x.Role
	}
	return nil
}

func (x *PRC_DeMultiplexer_Forward) GetInfo() *ClientMessageInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *PRC_DeMultiplexer_Forward) GetBodyMsg() []byte {
	if x != nil {
		return x.BodyMsg
	}
	return nil
}

var File_rpc_msg_rpc_msg_proto protoreflect.FileDescriptor

var file_rpc_msg_rpc_msg_proto_rawDesc = []byte{
	0x0a, 0x15, 0x72, 0x70, 0x63, 0x5f, 0x6d, 0x73, 0x67, 0x2f, 0x72, 0x70, 0x63, 0x5f, 0x6d, 0x73,
	0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x72, 0x70, 0x63, 0x5f, 0x6d, 0x73, 0x67,
	0x22, 0x5e, 0x0a, 0x07, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x12, 0x14, 0x0a, 0x05, 0x72,
	0x65, 0x61, 0x6c, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x72, 0x65, 0x61, 0x6c,
	0x6d, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x64,
	0x22, 0x67, 0x0a, 0x0a, 0x43, 0x4f, 0x4e, 0x54, 0x52, 0x4f, 0x4c, 0x4c, 0x45, 0x52, 0x12, 0x15,
	0x0a, 0x06, 0x73, 0x65, 0x71, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05,
	0x73, 0x65, 0x71, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74,
	0x5f, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x6f,
	0x75, 0x74, 0x4d, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x73,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x22, 0xb3, 0x01, 0x0a, 0x11, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x17,
	0x0a, 0x07, 0x73, 0x65, 0x71, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x06, 0x73, 0x65, 0x71, 0x4e, 0x75, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x70, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x6f, 0x70, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x27, 0x0a, 0x0f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x6f, 0x70, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x4f, 0x70, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x6e,
	0x65, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x22,
	0x80, 0x01, 0x0a, 0x0e, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69,
	0x65, 0x72, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x05, 0x67,
	0x77, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x72, 0x70, 0x63,
	0x5f, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x52, 0x04, 0x67, 0x77,
	0x49, 0x64, 0x12, 0x2e, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x72, 0x70, 0x63, 0x5f, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e,
	0x66, 0x6f, 0x22, 0x77, 0x0a, 0x11, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x5f, 0x49, 0x44, 0x45,
	0x4e, 0x54, 0x49, 0x46, 0x49, 0x45, 0x52, 0x12, 0x24, 0x0a, 0x04, 0x73, 0x74, 0x75, 0x62, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x72, 0x70, 0x63, 0x5f, 0x6d, 0x73, 0x67, 0x2e,
	0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x52, 0x04, 0x73, 0x74, 0x75, 0x62, 0x12, 0x15, 0x0a,
	0x06, 0x73, 0x65, 0x71, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x73,
	0x65, 0x71, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64,
	0x5f, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x72, 0x65,
	0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x39, 0x0a, 0x11, 0x53,
	0x45, 0x52, 0x56, 0x45, 0x52, 0x5f, 0x49, 0x44, 0x45, 0x4e, 0x54, 0x49, 0x46, 0x49, 0x45, 0x52,
	0x12, 0x24, 0x0a, 0x04, 0x73, 0x74, 0x75, 0x62, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x72, 0x70, 0x63, 0x5f, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c,
	0x52, 0x04, 0x73, 0x74, 0x75, 0x62, 0x22, 0xd1, 0x01, 0x0a, 0x0b, 0x52, 0x50, 0x43, 0x5f, 0x52,
	0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x12, 0x32, 0x0a, 0x06, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x72, 0x70, 0x63, 0x5f, 0x6d, 0x73, 0x67,
	0x2e, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x5f, 0x49, 0x44, 0x45, 0x4e, 0x54, 0x49, 0x46, 0x49,
	0x45, 0x52, 0x52, 0x06, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x32, 0x0a, 0x06, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x72, 0x70, 0x63,
	0x5f, 0x6d, 0x73, 0x67, 0x2e, 0x53, 0x45, 0x52, 0x56, 0x45, 0x52, 0x5f, 0x49, 0x44, 0x45, 0x4e,
	0x54, 0x49, 0x46, 0x49, 0x45, 0x52, 0x52, 0x06, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x23,
	0x0a, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x70, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x6f, 0x70, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x1b, 0x0a,
	0x09, 0x61, 0x72, 0x67, 0x73, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x08, 0x61, 0x72, 0x67, 0x73, 0x44, 0x61, 0x74, 0x61, 0x22, 0x2e, 0x0a, 0x06, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0xf3, 0x01, 0x0a, 0x0c, 0x52,
	0x50, 0x43, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x12, 0x32, 0x0a, 0x06, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x72, 0x70,
	0x63, 0x5f, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x5f, 0x49, 0x44, 0x45,
	0x4e, 0x54, 0x49, 0x46, 0x49, 0x45, 0x52, 0x52, 0x06, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12,
	0x32, 0x0a, 0x06, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x72, 0x70, 0x63, 0x5f, 0x6d, 0x73, 0x67, 0x2e, 0x53, 0x45, 0x52, 0x56, 0x45, 0x52,
	0x5f, 0x49, 0x44, 0x45, 0x4e, 0x54, 0x49, 0x46, 0x49, 0x45, 0x52, 0x52, 0x06, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x12, 0x27, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x72, 0x70, 0x63, 0x5f, 0x6d, 0x73, 0x67, 0x2e, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x19, 0x0a, 0x08,
	0x68, 0x61, 0x73, 0x5f, 0x6d, 0x6f, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x68, 0x61, 0x73, 0x4d, 0x6f, 0x72, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12,
	0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x22, 0x91, 0x01, 0x0a, 0x17, 0x52, 0x50, 0x43, 0x5f, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c,
	0x65, 0x78, 0x65, 0x72, 0x5f, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x12, 0x2b, 0x0a, 0x04,
	0x72, 0x6f, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x72, 0x70, 0x63,
	0x5f, 0x6d, 0x73, 0x67, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66,
	0x69, 0x65, 0x72, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x2e, 0x0a, 0x04, 0x69, 0x6e, 0x66,
	0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x72, 0x70, 0x63, 0x5f, 0x6d, 0x73,
	0x67, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x6f, 0x64,
	0x79, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x62, 0x6f, 0x64,
	0x79, 0x4d, 0x73, 0x67, 0x22, 0x93, 0x01, 0x0a, 0x19, 0x50, 0x52, 0x43, 0x5f, 0x44, 0x65, 0x4d,
	0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x78, 0x65, 0x72, 0x5f, 0x46, 0x6f, 0x72, 0x77, 0x61,
	0x72, 0x64, 0x12, 0x2b, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x72, 0x70, 0x63, 0x5f, 0x6d, 0x73, 0x67, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x49,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12,
	0x2e, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x72, 0x70, 0x63, 0x5f, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12,
	0x19, 0x0a, 0x08, 0x62, 0x6f, 0x64, 0x79, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x07, 0x62, 0x6f, 0x64, 0x79, 0x4d, 0x73, 0x67, 0x2a, 0xf3, 0x01, 0x0a, 0x0b, 0x52,
	0x50, 0x43, 0x5f, 0x4f, 0x50, 0x43, 0x4f, 0x44, 0x45, 0x53, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x50,
	0x43, 0x5f, 0x4e, 0x6f, 0x6e, 0x65, 0x10, 0x00, 0x12, 0x17, 0x0a, 0x12, 0x52, 0x50, 0x43, 0x5f,
	0x4d, 0x79, 0x73, 0x71, 0x6c, 0x44, 0x65, 0x73, 0x63, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x10, 0x91,
	0x03, 0x12, 0x13, 0x0a, 0x0e, 0x52, 0x50, 0x43, 0x5f, 0x4d, 0x79, 0x73, 0x71, 0x6c, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x10, 0x92, 0x03, 0x12, 0x14, 0x0a, 0x0f, 0x52, 0x50, 0x43, 0x5f, 0x4d, 0x79,
	0x73, 0x71, 0x6c, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x10, 0x93, 0x03, 0x12, 0x14, 0x0a, 0x0f,
	0x52, 0x50, 0x43, 0x5f, 0x4d, 0x79, 0x73, 0x71, 0x6c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x10,
	0x94, 0x03, 0x12, 0x14, 0x0a, 0x0f, 0x52, 0x50, 0x43, 0x5f, 0x4d, 0x79, 0x73, 0x71, 0x6c, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x10, 0x95, 0x03, 0x12, 0x1b, 0x0a, 0x16, 0x52, 0x50, 0x43, 0x5f,
	0x4d, 0x79, 0x73, 0x71, 0x6c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x42, 0x79, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x10, 0x96, 0x03, 0x12, 0x18, 0x0a, 0x13, 0x52, 0x50, 0x43, 0x5f, 0x4d, 0x79, 0x73,
	0x71, 0x6c, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x51, 0x75, 0x65, 0x72, 0x79, 0x10, 0x97, 0x03, 0x12,
	0x16, 0x0a, 0x11, 0x52, 0x50, 0x43, 0x5f, 0x4d, 0x79, 0x73, 0x71, 0x6c, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x41, 0x6c, 0x6c, 0x10, 0x98, 0x03, 0x12, 0x17, 0x0a, 0x12, 0x52, 0x50, 0x43, 0x5f, 0x4d,
	0x79, 0x73, 0x71, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x10, 0x99, 0x03,
	0x2a, 0xe3, 0x03, 0x0a, 0x08, 0x52, 0x50, 0x43, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x12, 0x0b, 0x0a,
	0x07, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x4f, 0x6b, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x43, 0x4f,
	0x44, 0x45, 0x5f, 0x4f, 0x6b, 0x5f, 0x41, 0x73, 0x79, 0x6e, 0x63, 0x10, 0x01, 0x12, 0x10, 0x0a,
	0x0c, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x10, 0x64, 0x12,
	0x13, 0x0a, 0x0f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x55, 0x6e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x10, 0x65, 0x12, 0x13, 0x0a, 0x0f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x50, 0x61, 0x72,
	0x73, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x66, 0x12, 0x18, 0x0a, 0x14, 0x43, 0x4f, 0x44,
	0x45, 0x5f, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x50, 0x6f, 0x73,
	0x74, 0x10, 0x67, 0x12, 0x1d, 0x0a, 0x19, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x52, 0x6f, 0x75, 0x74,
	0x65, 0x4e, 0x6f, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x54, 0x6f, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x10, 0x68, 0x12, 0x1f, 0x0a, 0x1b, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x52, 0x6f, 0x75, 0x74, 0x65,
	0x53, 0x65, 0x6e, 0x64, 0x54, 0x6f, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x10, 0x69, 0x12, 0x19, 0x0a, 0x15, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x4f, 0x70, 0x63, 0x6f,
	0x64, 0x65, 0x55, 0x6e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x10, 0x6a, 0x12, 0x17,
	0x0a, 0x13, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x73, 0x67,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x6b, 0x12, 0x18, 0x0a, 0x14, 0x43, 0x4f, 0x44, 0x45, 0x5f,
	0x4c, 0x6f, 0x67, 0x69, 0x63, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x4e, 0x75, 0x6c, 0x6c, 0x10,
	0x6c, 0x12, 0x19, 0x0a, 0x15, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x4e, 0x6f, 0x74, 0x52, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x10, 0x6d, 0x12, 0x10, 0x0a, 0x0c,
	0x43, 0x4f, 0x44, 0x45, 0x5f, 0x4e, 0x6f, 0x74, 0x53, 0x65, 0x6e, 0x64, 0x10, 0x6e, 0x12, 0x18,
	0x0a, 0x14, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x4c, 0x6f, 0x61, 0x64, 0x46, 0x72, 0x6f, 0x6d, 0x44,
	0x62, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x6f, 0x12, 0x16, 0x0a, 0x12, 0x43, 0x4f, 0x44, 0x45,
	0x5f, 0x44, 0x69, 0x72, 0x74, 0x79, 0x46, 0x6c, 0x61, 0x67, 0x5a, 0x65, 0x72, 0x6f, 0x10, 0x70,
	0x12, 0x13, 0x0a, 0x0f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x51, 0x75, 0x65, 0x72, 0x79, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x10, 0x71, 0x12, 0x1f, 0x0a, 0x1b, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x54, 0x61,
	0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x4e, 0x6f, 0x74, 0x45, 0x78, 0x69, 0x73, 0x74, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x10, 0x72, 0x12, 0x1e, 0x0a, 0x1a, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x47,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x51, 0x4c, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x10, 0x73, 0x12, 0x1e, 0x0a, 0x1a, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x4e,
	0x6f, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x10, 0x74, 0x42, 0x34, 0x5a, 0x32, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x77, 0x75, 0x71, 0x75, 0x6e, 0x79, 0x6f, 0x6e, 0x67, 0x2f, 0x66,
	0x69, 0x6c, 0x65, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x72, 0x70, 0x63, 0x5f, 0x6d, 0x73, 0x67, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_rpc_msg_rpc_msg_proto_rawDescOnce sync.Once
	file_rpc_msg_rpc_msg_proto_rawDescData = file_rpc_msg_rpc_msg_proto_rawDesc
)

func file_rpc_msg_rpc_msg_proto_rawDescGZIP() []byte {
	file_rpc_msg_rpc_msg_proto_rawDescOnce.Do(func() {
		file_rpc_msg_rpc_msg_proto_rawDescData = protoimpl.X.CompressGZIP(file_rpc_msg_rpc_msg_proto_rawDescData)
	})
	return file_rpc_msg_rpc_msg_proto_rawDescData
}

var file_rpc_msg_rpc_msg_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_rpc_msg_rpc_msg_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_rpc_msg_rpc_msg_proto_goTypes = []interface{}{
	(RPC_OPCODES)(0),                  // 0: rpc_msg.RPC_OPCODES
	(RPC_CODE)(0),                     // 1: rpc_msg.RPC_CODE
	(*CHANNEL)(nil),                   // 2: rpc_msg.CHANNEL
	(*CONTROLLER)(nil),                // 3: rpc_msg.CONTROLLER
	(*ClientMessageInfo)(nil),         // 4: rpc_msg.ClientMessageInfo
	(*RoleIdentifier)(nil),            // 5: rpc_msg.RoleIdentifier
	(*CLIENT_IDENTIFIER)(nil),         // 6: rpc_msg.CLIENT_IDENTIFIER
	(*SERVER_IDENTIFIER)(nil),         // 7: rpc_msg.SERVER_IDENTIFIER
	(*RPC_REQUEST)(nil),               // 8: rpc_msg.RPC_REQUEST
	(*STATUS)(nil),                    // 9: rpc_msg.STATUS
	(*RPC_RESPONSE)(nil),              // 10: rpc_msg.RPC_RESPONSE
	(*RPC_Multiplexer_Forward)(nil),   // 11: rpc_msg.RPC_Multiplexer_Forward
	(*PRC_DeMultiplexer_Forward)(nil), // 12: rpc_msg.PRC_DeMultiplexer_Forward
}
var file_rpc_msg_rpc_msg_proto_depIdxs = []int32{
	2,  // 0: rpc_msg.RoleIdentifier.gw_id:type_name -> rpc_msg.CHANNEL
	4,  // 1: rpc_msg.RoleIdentifier.info:type_name -> rpc_msg.ClientMessageInfo
	2,  // 2: rpc_msg.CLIENT_IDENTIFIER.stub:type_name -> rpc_msg.CHANNEL
	2,  // 3: rpc_msg.SERVER_IDENTIFIER.stub:type_name -> rpc_msg.CHANNEL
	6,  // 4: rpc_msg.RPC_REQUEST.client:type_name -> rpc_msg.CLIENT_IDENTIFIER
	7,  // 5: rpc_msg.RPC_REQUEST.server:type_name -> rpc_msg.SERVER_IDENTIFIER
	6,  // 6: rpc_msg.RPC_RESPONSE.client:type_name -> rpc_msg.CLIENT_IDENTIFIER
	7,  // 7: rpc_msg.RPC_RESPONSE.server:type_name -> rpc_msg.SERVER_IDENTIFIER
	9,  // 8: rpc_msg.RPC_RESPONSE.status:type_name -> rpc_msg.STATUS
	5,  // 9: rpc_msg.RPC_Multiplexer_Forward.role:type_name -> rpc_msg.RoleIdentifier
	4,  // 10: rpc_msg.RPC_Multiplexer_Forward.info:type_name -> rpc_msg.ClientMessageInfo
	5,  // 11: rpc_msg.PRC_DeMultiplexer_Forward.role:type_name -> rpc_msg.RoleIdentifier
	4,  // 12: rpc_msg.PRC_DeMultiplexer_Forward.info:type_name -> rpc_msg.ClientMessageInfo
	13, // [13:13] is the sub-list for method output_type
	13, // [13:13] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_rpc_msg_rpc_msg_proto_init() }
func file_rpc_msg_rpc_msg_proto_init() {
	if File_rpc_msg_rpc_msg_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_rpc_msg_rpc_msg_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CHANNEL); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_msg_rpc_msg_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CONTROLLER); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_msg_rpc_msg_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientMessageInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_msg_rpc_msg_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleIdentifier); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_msg_rpc_msg_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CLIENT_IDENTIFIER); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_msg_rpc_msg_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SERVER_IDENTIFIER); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_msg_rpc_msg_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RPC_REQUEST); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_msg_rpc_msg_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*STATUS); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_msg_rpc_msg_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RPC_RESPONSE); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_msg_rpc_msg_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RPC_Multiplexer_Forward); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_msg_rpc_msg_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PRC_DeMultiplexer_Forward); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_rpc_msg_rpc_msg_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_rpc_msg_rpc_msg_proto_goTypes,
		DependencyIndexes: file_rpc_msg_rpc_msg_proto_depIdxs,
		EnumInfos:         file_rpc_msg_rpc_msg_proto_enumTypes,
		MessageInfos:      file_rpc_msg_rpc_msg_proto_msgTypes,
	}.Build()
	File_rpc_msg_rpc_msg_proto = out.File
	file_rpc_msg_rpc_msg_proto_rawDesc = nil
	file_rpc_msg_rpc_msg_proto_goTypes = nil
	file_rpc_msg_rpc_msg_proto_depIdxs = nil
}
